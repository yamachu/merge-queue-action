name: "Merge Queuing / PostTesting"
description: "Support for merge queuing"
author: "yamachu"
inputs:
  github-token:
    description: "Token that allows access to the GitHub API"
    required: true
  merge-user-email:
    description: "Email to use for merge commits"
    required: false
    default: "41898282+github-actions[bot]@users.noreply.github.com"
  merge-user-name:
    description: "Name to use for merge commits"
    required: false
    default: "github-actions[bot]"
  pr-number:
    description: "Pull Request Number"
    required: true
  base-branch-sha:
    description: "SHA of the base branch"
    required: true
  base-branch:
    description: "Name of the base branch"
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - uses: actions/github-script@v7
      with:
        script: |
          const { default: isMergeable } = await import('${{ github.action_path }}/../src/isMergeable.js')
          await isMergeable({ github }, {
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ inputs.pr-number }}
          })
    - uses: actions/github-script@v7
      with:
        script: |
          const { default: getBaseBranchSha } = await import('${{ github.action_path }}/../src/getBaseBranchSha.js')
          const currentSha = await getBaseBranchSha({ github }, {
            owner: context.repo.owner,
            repo: context.repo.repo,
            branchName: ${{ inputs.base-branch }}
          })
          if (currentSha !== ${{ inputs.base-branch-sha }}) {
            throw new Error('The base branch has been updated since the last check.');
          }
    - shell: bash
      run: |
        git config --global user.email ${{ inputs.merge-user-email }}
        git config --global user.name ${{ inputs.merge-user-name }}

        gh pr merge ${{ inputs.pr-number }} -m
      env:
        GH_TOKEN: ${{ inputs.github-token }}
